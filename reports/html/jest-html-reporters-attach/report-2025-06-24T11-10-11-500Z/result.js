window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":6,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":9,"startTime":1750763411944,"success":false,"testResults":[{"numFailingTests":3,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750763414237,"loadTestEnvironmentEnd":1750763412236,"loadTestEnvironmentStart":1750763412187,"runtime":2000,"setupAfterEnvEnd":1750763412419,"setupAfterEnvStart":1750763412419,"setupFilesEnd":1750763412237,"setupFilesStart":1750763412237,"slow":false,"start":1750763412237},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › create() › створює запис з правильними лімітами\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m25\u001b[39m, \u001b[32m100\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       expect(arg\u001b[33m.\u001b[39minitialAmount)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m       \u001b[90m// minLimit = round(amount * persent, 100) (мокаємо round → повертає перший аргумент)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m       expect(round)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[35m500\u001b[39m \u001b[33m*\u001b[39m \u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mminLimit\u001b[33m.\u001b[39mpersent\u001b[33m,\u001b[39m \u001b[35m100\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       expect(arg\u001b[33m.\u001b[39mminLimit)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m \u001b[33m*\u001b[39m \u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mminLimit\u001b[33m.\u001b[39mpersent)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       \u001b[90m// maxLimit = amount > minNcApiLimit ? amount - minNcApiLimit : minLimit\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       expect(arg\u001b[33m.\u001b[39mmaxLimit)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m \u001b[33m-\u001b[39m \u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mminNcApiLimit)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:49:21)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › refresh() › викликає NC API у останній гілці\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"0000\"\u001b[39m, \u001b[32m50\u001b[39m, \u001b[32m\"PAY1\"\u001b[39m, \u001b[32mAny<Function>\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 116 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m       \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mrefresh(\u001b[32m'PAY1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 118 |\u001b[39m       expect(\u001b[33mNcApi\u001b[39m\u001b[33m.\u001b[39mmakeOrder)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m         \u001b[32m'0000'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m         \u001b[35m50\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 121 |\u001b[39m         \u001b[32m'PAY1'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:118:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › choiceBest() › повертає null, якщо немає підходящого платежу\u001b[39m\u001b[22m\n\n    TypeError: Payment.find(...).sort is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 272 |\u001b[39m         isTail\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 273 |\u001b[39m         isFreeze\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 274 |\u001b[39m     })\u001b[33m.\u001b[39msort({ createdAt\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 275 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 276 |\u001b[39m     \u001b[36mreturn\u001b[39m list\u001b[33m.\u001b[39mlength\u001b[33m?\u001b[39m list[\u001b[35m0\u001b[39m] \u001b[33m:\u001b[39m \u001b[36mnull\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 277 |\u001b[39m }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat getBestByEqual (\u001b[22m\u001b[2mlayers/controllers/Payment.controller.js\u001b[2m:274:8)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat getBest (\u001b[22m\u001b[2mlayers/controllers/Payment.controller.js\u001b[2m:297:29)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.choiceBest (\u001b[22m\u001b[2mlayers/controllers/Payment.controller.js\u001b[2m:309:31)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:146:37)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Payment.controller","create()"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m25\u001b[39m, \u001b[32m100\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:49:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller create() створює запис з правильними лімітами","status":"failed","title":"створює запис з правильними лімітами"},{"ancestorTitles":["Payment.controller","create()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller create() викидає Exception.isExist, якщо refId дублюється","status":"passed","title":"викидає Exception.isExist, якщо refId дублюється"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() ставить статус ACTIVE, коли нема інвойсів і баланс > 0","status":"passed","title":"ставить статус ACTIVE, коли нема інвойсів і баланс > 0"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() ставить BLOCKED, коли isFreeze = true","status":"passed","title":"ставить BLOCKED, коли isFreeze = true"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"0000\"\u001b[39m, \u001b[32m50\u001b[39m, \u001b[32m\"PAY1\"\u001b[39m, \u001b[32mAny<Function>\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:118:31)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller refresh() викликає NC API у останній гілці","status":"failed","title":"викликає NC API у останній гілці"},{"ancestorTitles":["Payment.controller","getMaxAvailable()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getMaxAvailable() рахує доступний залишок правильно","status":"passed","title":"рахує доступний залишок правильно"},{"ancestorTitles":["Payment.controller","choiceBest()"],"duration":1,"failureMessages":["TypeError: Payment.find(...).sort is not a function\n    at getBestByEqual (D:\\ncP2P-2\\layers\\controllers\\Payment.controller.js:274:8)\n    at getBest (D:\\ncP2P-2\\layers\\controllers\\Payment.controller.js:297:29)\n    at Object.choiceBest (D:\\ncP2P-2\\layers\\controllers\\Payment.controller.js:309:31)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:146:37)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller choiceBest() повертає null, якщо немає підходящого платежу","status":"failed","title":"повертає null, якщо немає підходящого платежу"},{"ancestorTitles":["Payment.controller","getStatistics()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getStatistics() агрегація для SUCCESS повертає коректні суми","status":"passed","title":"агрегація для SUCCESS повертає коректні суми"},{"ancestorTitles":["Payment.controller","list()"],"duration":2,"failureMessages":[],"fullName":"Payment.controller list() повертає список і count через прямий find() і countDocuments()","status":"passed","title":"повертає список і count через прямий find() і countDocuments()"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Payment.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-24T11-10-11-500Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":-390131851,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Payment.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750763414251,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-24T11-10-11-500Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})