window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":6,"numPassedTestSuites":0,"numPassedTests":9,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":15,"startTime":1750791846006,"success":false,"testResults":[{"numFailingTests":6,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750791846557,"loadTestEnvironmentEnd":1750791846289,"loadTestEnvironmentStart":1750791846238,"runtime":267,"setupAfterEnvEnd":1750791846467,"setupAfterEnvStart":1750791846467,"setupFilesEnd":1750791846290,"setupFilesStart":1750791846290,"slow":false,"start":1750791846290},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › refresh() › ставить ACTIVE, коли нема інвойсів і баланс > 0\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"ACTIVE\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 70 |\u001b[39m       \u001b[33mInvoiceModel\u001b[39m\u001b[33m.\u001b[39mfind\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m       \u001b[36mconst\u001b[39m out \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mrefresh(\u001b[32m'PAY1'\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 72 |\u001b[39m       expect(out\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mACTIVE\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m     it(\u001b[32m'ставить BLOCKED, коли isFreeze = true'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m       \u001b[36mconst\u001b[39m pay \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39mbase\u001b[33m,\u001b[39m isFreeze\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mthis\u001b[39m) }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:72:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › refresh() › ставить BLOCKED, коли isFreeze = true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"BLOCKED\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 |\u001b[39m       \u001b[33mInvoiceModel\u001b[39m\u001b[33m.\u001b[39mfind\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m       \u001b[36mconst\u001b[39m out \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mrefresh(\u001b[32m'PAY1'\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 79 |\u001b[39m       expect(out\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mBLOCKED\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m     it(\u001b[32m'не викликає NC API для ACTIVE-потоку'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m       \u001b[33mInvoiceModel\u001b[39m\u001b[33m.\u001b[39mfind\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:79:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › error branches for closeTail/reject/freeze/unfreeze › closeTail CONFIRM throws internal error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 129 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ status\u001b[33m:\u001b[39m\u001b[32m'OLD'\u001b[39m\u001b[33m,\u001b[39m isTail\u001b[33m:\u001b[39m\u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue() })\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m       \u001b[33mInvoiceModel\u001b[39m\u001b[33m.\u001b[39mfind\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[33m.\u001b[39mmockResolvedValueOnce([])\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 131 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mcloseTail(\u001b[32m'T'\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'CONFIRM'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoBe(\u001b[33mException\u001b[39m\u001b[33m.\u001b[39mnotCanSaveModel)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 132 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 133 |\u001b[39m     it(\u001b[32m'reject valid throws internal error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ status\u001b[33m:\u001b[39m \u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mACTIVE\u001b[39m\u001b[33m,\u001b[39m currentAmount\u001b[33m:\u001b[39m\u001b[35m100\u001b[39m\u001b[33m,\u001b[39m initialAmount\u001b[33m:\u001b[39m\u001b[35m100\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:2113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:131:13)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › error branches for closeTail/reject/freeze/unfreeze › reject valid throws internal error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 |\u001b[39m     it(\u001b[32m'reject valid throws internal error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ status\u001b[33m:\u001b[39m \u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mACTIVE\u001b[39m\u001b[33m,\u001b[39m currentAmount\u001b[33m:\u001b[39m\u001b[35m100\u001b[39m\u001b[33m,\u001b[39m initialAmount\u001b[33m:\u001b[39m\u001b[35m100\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m })\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 135 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mreject({access\u001b[33m:\u001b[39m\u001b[32m'U'\u001b[39m\u001b[33m,\u001b[39maccessId\u001b[33m:\u001b[39m\u001b[32m'X'\u001b[39m}\u001b[33m,\u001b[39m\u001b[32m'ID'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoBe(\u001b[33mException\u001b[39m\u001b[33m.\u001b[39mnotCanSaveModel)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 137 |\u001b[39m     it(\u001b[32m'freeze throws internal error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ status\u001b[33m:\u001b[39m\u001b[32m'ANY'\u001b[39m\u001b[33m,\u001b[39m isFreeze\u001b[33m:\u001b[39m\u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:2113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:135:13)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › error branches for closeTail/reject/freeze/unfreeze › freeze throws internal error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 |\u001b[39m     it(\u001b[32m'freeze throws internal error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 138 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ status\u001b[33m:\u001b[39m\u001b[32m'ANY'\u001b[39m\u001b[33m,\u001b[39m isFreeze\u001b[33m:\u001b[39m\u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m })\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 139 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mfreeze({access\u001b[33m:\u001b[39m\u001b[32m'U'\u001b[39m\u001b[33m,\u001b[39maccessId\u001b[33m:\u001b[39m\u001b[32m'X'\u001b[39m}\u001b[33m,\u001b[39m\u001b[32m'ID'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoBe(\u001b[33mException\u001b[39m\u001b[33m.\u001b[39mnotCanSaveModel)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 140 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m     it(\u001b[32m'unfreeze throws internal error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 142 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ isFreeze\u001b[33m:\u001b[39m\u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:2113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:139:13)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › error branches for closeTail/reject/freeze/unfreeze › unfreeze throws internal error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\n    Received promise resolved instead of rejected\n    Resolved to value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 |\u001b[39m     it(\u001b[32m'unfreeze throws internal error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 142 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue({ isFreeze\u001b[33m:\u001b[39m\u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39mjest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m\u001b[32m'ID'\u001b[39m })\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 143 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39munfreeze({access\u001b[33m:\u001b[39m\u001b[32m'U'\u001b[39m\u001b[33m,\u001b[39maccessId\u001b[33m:\u001b[39m\u001b[32m'X'\u001b[39m}\u001b[33m,\u001b[39m\u001b[32m'ID'\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoBe(\u001b[33mException\u001b[39m\u001b[33m.\u001b[39mnotCanSaveModel)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m   })\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat expect (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:2113:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:143:13)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Payment.controller","create()"],"duration":4,"failureMessages":[],"fullName":"Payment.controller create() створює запис з правильними лімітами","status":"passed","title":"створює запис з правильними лімітами"},{"ancestorTitles":["Payment.controller","create()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller create() викидає Exception.isExist, якщо refId дублюється","status":"passed","title":"викидає Exception.isExist, якщо refId дублюється"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"ACTIVE\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:72:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller refresh() ставить ACTIVE, коли нема інвойсів і баланс > 0","status":"failed","title":"ставить ACTIVE, коли нема інвойсів і баланс > 0"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"BLOCKED\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:79:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller refresh() ставить BLOCKED, коли isFreeze = true","status":"failed","title":"ставить BLOCKED, коли isFreeze = true"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() не викликає NC API для ACTIVE-потоку","status":"passed","title":"не викликає NC API для ACTIVE-потоку"},{"ancestorTitles":["Payment.controller","getMaxAvailable()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getMaxAvailable() рахує доступний залишок правильно","status":"passed","title":"рахує доступний залишок правильно"},{"ancestorTitles":["Payment.controller","choiceBest()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller choiceBest() повертає null, якщо немає підходящого платежу","status":"passed","title":"повертає null, якщо немає підходящого платежу"},{"ancestorTitles":["Payment.controller","getStatistics()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getStatistics() агрегація для SUCCESS повертає коректні дані","status":"passed","title":"агрегація для SUCCESS повертає коректні дані"},{"ancestorTitles":["Payment.controller","list()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller list() повертає список і count","status":"passed","title":"повертає список і count"},{"ancestorTitles":["Payment.controller","error branches for closeTail/reject/freeze/unfreeze"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (D:\\ncP2P-2\\node_modules\\expect\\build\\index.js:2113:15)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:131:13)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller error branches for closeTail/reject/freeze/unfreeze closeTail CONFIRM throws internal error","status":"failed","title":"closeTail CONFIRM throws internal error"},{"ancestorTitles":["Payment.controller","error branches for closeTail/reject/freeze/unfreeze"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (D:\\ncP2P-2\\node_modules\\expect\\build\\index.js:2113:15)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:135:13)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller error branches for closeTail/reject/freeze/unfreeze reject valid throws internal error","status":"failed","title":"reject valid throws internal error"},{"ancestorTitles":["Payment.controller","error branches for closeTail/reject/freeze/unfreeze"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (D:\\ncP2P-2\\node_modules\\expect\\build\\index.js:2113:15)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:139:13)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller error branches for closeTail/reject/freeze/unfreeze freeze throws internal error","status":"failed","title":"freeze throws internal error"},{"ancestorTitles":["Payment.controller","error branches for closeTail/reject/freeze/unfreeze"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (D:\\ncP2P-2\\node_modules\\expect\\build\\index.js:2113:15)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:143:13)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller error branches for closeTail/reject/freeze/unfreeze unfreeze throws internal error","status":"failed","title":"unfreeze throws internal error"},{"ancestorTitles":["Payment.controller","togglePriority()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller togglePriority() перемикає priority і зберігає","status":"passed","title":"перемикає priority і зберігає"},{"ancestorTitles":["Payment.controller","sendProofs()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller sendProofs() повертає proof links","status":"passed","title":"повертає proof links"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js","layers/filters/**/*.js","layers/format/**/*.js","layers/serialize/**/*.js","layers/validate/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Payment.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-24T19-04-05-559Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":169354566,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Payment.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750791846572,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-24T19-04-05-559Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})