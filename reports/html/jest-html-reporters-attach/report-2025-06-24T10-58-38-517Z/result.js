window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":9,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":9,"startTime":1750762718962,"success":false,"testResults":[{"numFailingTests":9,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750762721533,"loadTestEnvironmentEnd":1750762719254,"loadTestEnvironmentStart":1750762719203,"runtime":2278,"setupAfterEnvEnd":1750762719427,"setupAfterEnvStart":1750762719427,"setupFilesEnd":1750762719255,"setupFilesStart":1750762719255,"slow":false,"start":1750762719255},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › create() › створює запис з розрахованими лімітами\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a mock or spy function\n\n    Received has type:  function\n    Received has value: \u001b[31m[Function model]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m       expect(\u001b[33mPaymentModel\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(expect\u001b[33m.\u001b[39mobjectContaining({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m         accessId\u001b[33m:\u001b[39m \u001b[32m'A1'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m         author\u001b[33m:\u001b[39m \u001b[32m'U1'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m         amount\u001b[33m:\u001b[39m \u001b[35m500\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:50:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › create() › викидає isExist, якщо refId вже є\u001b[39m\u001b[22m\n\n    TypeError: PaymentModel.findOne.mockResolvedValueOnce is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m     it(\u001b[32m'викидає isExist, якщо refId вже є'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 65 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValueOnce({})\u001b[33m;\u001b[39m \u001b[90m// дубль\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m         \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mcreate(\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m           { accessId\u001b[33m:\u001b[39m \u001b[32m'A1'\u001b[39m\u001b[33m,\u001b[39m author\u001b[33m:\u001b[39m \u001b[32m'U1'\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:65:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › refresh() › SUCCESS, коли нема активних інвойсів та currentAmount <= 0\u001b[39m\u001b[22m\n\n    TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 |\u001b[39m       \u001b[36mconst\u001b[39m inst \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39mbasePayment }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m       inst\u001b[33m.\u001b[39msave \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(inst)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 91 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(inst)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m     it(\u001b[32m'SUCCESS, коли нема активних інвойсів та currentAmount <= 0'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:91:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › refresh() › ставить BLOCKED, якщо isFreeze = true\u001b[39m\u001b[22m\n\n    TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 |\u001b[39m       \u001b[36mconst\u001b[39m inst \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39mbasePayment }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m       inst\u001b[33m.\u001b[39msave \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(inst)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 91 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(inst)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m     it(\u001b[32m'SUCCESS, коли нема активних інвойсів та currentAmount <= 0'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:91:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › refresh() › надсилає до NC API, коли доходить до останньої гілки\u001b[39m\u001b[22m\n\n    TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 |\u001b[39m       \u001b[36mconst\u001b[39m inst \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39mbasePayment }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m       inst\u001b[33m.\u001b[39msave \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(inst)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 91 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(inst)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m     it(\u001b[32m'SUCCESS, коли нема активних інвойсів та currentAmount <= 0'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:91:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › getMaxAvailable() › рахує доступний залишок з поправкою на рахунковий інвойс\u001b[39m\u001b[22m\n\n    TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 130 |\u001b[39m     it(\u001b[32m'рахує доступний залишок з поправкою на рахунковий інвойс'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 131 |\u001b[39m       \u001b[36mconst\u001b[39m pay \u001b[33m=\u001b[39m { initialAmount\u001b[33m:\u001b[39m \u001b[35m200\u001b[39m\u001b[33m,\u001b[39m tailAmount\u001b[33m:\u001b[39m \u001b[35m0\u001b[39m\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m \u001b[32m'P'\u001b[39m\u001b[33m,\u001b[39m currentAmount\u001b[33m:\u001b[39m \u001b[35m0\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 132 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[33m.\u001b[39mmockResolvedValue(pay)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 133 |\u001b[39m       \u001b[33mInvoiceModel\u001b[39m\u001b[33m.\u001b[39mfind\u001b[33m.\u001b[39mmockResolvedValue([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 135 |\u001b[39m       \u001b[36mconst\u001b[39m invoice \u001b[33m=\u001b[39m { amount\u001b[33m:\u001b[39m \u001b[35m50\u001b[39m\u001b[33m,\u001b[39m initialAmount\u001b[33m:\u001b[39m \u001b[35m100\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:132:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › choiceBest() › повертає null, якщо немає підходящої суми\u001b[39m\u001b[22m\n\n    Property `getBest` does not exist in the provided object\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 |\u001b[39m   describe(\u001b[32m'choiceBest()'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 142 |\u001b[39m     it(\u001b[32m'повертає null, якщо немає підходящої суми'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 143 |\u001b[39m       jest\u001b[33m.\u001b[39mspyOn(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'getBest'\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m       \u001b[36mconst\u001b[39m out \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mchoiceBest(\u001b[35m123\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m       expect(out)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ModuleMocker.spyOn (\u001b[22m\u001b[2mnode_modules/jest-mock/build/index.js\u001b[2m:593:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:143:12)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › getStatistics() › агрегація для SUCCESS статусу повертає правильні суми\u001b[39m\u001b[22m\n\n    TypeError: PaymentModel.aggregate.mockResolvedValue is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 158 |\u001b[39m         dt\u001b[33m:\u001b[39m \u001b[35m0\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m       }]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 160 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39maggregate\u001b[33m.\u001b[39mmockResolvedValue(fakeAgg)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 162 |\u001b[39m       \u001b[36mconst\u001b[39m res \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mgetStatistics(\u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m0\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 163 |\u001b[39m       expect(\u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39maggregate)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:160:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › list() › повертає список і count з getList\u001b[39m\u001b[22m\n\n    Property `getList` does not exist in the provided object\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 171 |\u001b[39m     it(\u001b[32m'повертає список і count з getList'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 172 |\u001b[39m       \u001b[36mconst\u001b[39m mockList \u001b[33m=\u001b[39m { list\u001b[33m:\u001b[39m [{ a\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }]\u001b[33m,\u001b[39m count\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 173 |\u001b[39m       jest\u001b[33m.\u001b[39mspyOn(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'getList'\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue(mockList)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 174 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 175 |\u001b[39m       \u001b[36mconst\u001b[39m out \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mlist({ access\u001b[33m:\u001b[39m \u001b[32m'u'\u001b[39m\u001b[33m,\u001b[39m accessId\u001b[33m:\u001b[39m \u001b[32m'X'\u001b[39m }\u001b[33m,\u001b[39m {}\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m \u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 176 |\u001b[39m       expect(out)\u001b[33m.\u001b[39mtoEqual(mockList)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ModuleMocker.spyOn (\u001b[22m\u001b[2mnode_modules/jest-mock/build/index.js\u001b[2m:593:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:173:12)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Payment.controller","create()"],"duration":6,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a mock or spy function\n\nReceived has type:  function\nReceived has value: \u001b[31m[Function model]\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:50:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller create() створює запис з розрахованими лімітами","status":"failed","title":"створює запис з розрахованими лімітами"},{"ancestorTitles":["Payment.controller","create()"],"duration":0,"failureMessages":["TypeError: PaymentModel.findOne.mockResolvedValueOnce is not a function\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:65:28)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller create() викидає isExist, якщо refId вже є","status":"failed","title":"викидає isExist, якщо refId вже є"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":0,"failureMessages":["TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:91:28)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller refresh() SUCCESS, коли нема активних інвойсів та currentAmount <= 0","status":"failed","title":"SUCCESS, коли нема активних інвойсів та currentAmount <= 0"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":["TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:91:28)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller refresh() ставить BLOCKED, якщо isFreeze = true","status":"failed","title":"ставить BLOCKED, якщо isFreeze = true"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":0,"failureMessages":["TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:91:28)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusHook (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:978:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:943:5)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller refresh() надсилає до NC API, коли доходить до останньої гілки","status":"failed","title":"надсилає до NC API, коли доходить до останньої гілки"},{"ancestorTitles":["Payment.controller","getMaxAvailable()"],"duration":1,"failureMessages":["TypeError: PaymentModel.findOne.mockResolvedValue is not a function\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:132:28)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller getMaxAvailable() рахує доступний залишок з поправкою на рахунковий інвойс","status":"failed","title":"рахує доступний залишок з поправкою на рахунковий інвойс"},{"ancestorTitles":["Payment.controller","choiceBest()"],"duration":2,"failureMessages":["Error: Property `getBest` does not exist in the provided object\n    at ModuleMocker.spyOn (D:\\ncP2P-2\\node_modules\\jest-mock\\build\\index.js:593:13)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:143:12)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller choiceBest() повертає null, якщо немає підходящої суми","status":"failed","title":"повертає null, якщо немає підходящої суми"},{"ancestorTitles":["Payment.controller","getStatistics()"],"duration":0,"failureMessages":["TypeError: PaymentModel.aggregate.mockResolvedValue is not a function\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:160:30)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller getStatistics() агрегація для SUCCESS статусу повертає правильні суми","status":"failed","title":"агрегація для SUCCESS статусу повертає правильні суми"},{"ancestorTitles":["Payment.controller","list()"],"duration":1,"failureMessages":["Error: Property `getList` does not exist in the provided object\n    at ModuleMocker.spyOn (D:\\ncP2P-2\\node_modules\\jest-mock\\build\\index.js:593:13)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:173:12)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller list() повертає список і count з getList","status":"failed","title":"повертає список і count з getList"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Payment.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-24T10-58-38-517Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":563135620,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Payment.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750762721546,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-24T10-58-38-517Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})