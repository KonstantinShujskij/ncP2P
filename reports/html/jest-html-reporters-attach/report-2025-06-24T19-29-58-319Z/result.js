window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":18,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":22,"startTime":1750793398788,"success":false,"testResults":[{"numFailingTests":4,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750793399351,"loadTestEnvironmentEnd":1750793399074,"loadTestEnvironmentStart":1750793399019,"runtime":276,"setupAfterEnvEnd":1750793399256,"setupAfterEnvStart":1750793399256,"setupFilesEnd":1750793399075,"setupFilesStart":1750793399075,"slow":false,"start":1750793399075},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › closeTail() › оновлює і повертає оновлений payment при CONFIRM\u001b[39m\u001b[22m\n\n    ReferenceError: Cannot access 'payment' before initialization\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 220 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 221 |\u001b[39m     it(\u001b[32m'оновлює і повертає оновлений payment при CONFIRM'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 222 |\u001b[39m       \u001b[36mconst\u001b[39m payment \u001b[33m=\u001b[39m { status\u001b[33m:\u001b[39m \u001b[32m'OLD'\u001b[39m\u001b[33m,\u001b[39m isTail\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m \u001b[32m'ID'\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(payment) }\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 223 |\u001b[39m       \u001b[90m// Перший виклик для findOne({ tailId }), другий для get всередині refresh\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 224 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[22m\n\u001b[2m     \u001b[90m 225 |\u001b[39m         \u001b[33m.\u001b[39mmockResolvedValueOnce(payment)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:222:99)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › reject() › ставить REJECT і повертає оновлений payment, якщо умови дотримано\u001b[39m\u001b[22m\n\n    ReferenceError: Cannot access 'pay' before initialization\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 255 |\u001b[39m         currentAmount\u001b[33m:\u001b[39m \u001b[35m100\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 256 |\u001b[39m         initialAmount\u001b[33m:\u001b[39m \u001b[35m100\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 257 |\u001b[39m         save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(pay)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 258 |\u001b[39m         _id\u001b[33m:\u001b[39m \u001b[32m'ID'\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m       }\u001b[22m\n\u001b[2m     \u001b[90m 260 |\u001b[39m       \u001b[90m// Перший виклик для getByUser, другий для get всередині refresh\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:257:43)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › freeze() › ставить BLOCKED, isFreeze=true і повертає оновлений payment\u001b[39m\u001b[22m\n\n    ReferenceError: Cannot access 'pay' before initialization\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 273 |\u001b[39m   describe(\u001b[32m'freeze()'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 274 |\u001b[39m     it(\u001b[32m'ставить BLOCKED, isFreeze=true і повертає оновлений payment'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 275 |\u001b[39m       \u001b[36mconst\u001b[39m pay \u001b[33m=\u001b[39m { status\u001b[33m:\u001b[39m \u001b[32m'ANY'\u001b[39m\u001b[33m,\u001b[39m isFreeze\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(pay)\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m \u001b[32m'ID'\u001b[39m }\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 276 |\u001b[39m       \u001b[90m// Перший виклик для getByUser, другий для get всередині refresh\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 277 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[22m\n\u001b[2m     \u001b[90m 278 |\u001b[39m         \u001b[33m.\u001b[39mmockResolvedValueOnce(pay)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:275:87)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › unfreeze() › знімає freeze і повертає оновлений payment\u001b[39m\u001b[22m\n\n    ReferenceError: Cannot access 'pay' before initialization\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 296 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 297 |\u001b[39m     it(\u001b[32m'знімає freeze і повертає оновлений payment'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 298 |\u001b[39m       \u001b[36mconst\u001b[39m pay \u001b[33m=\u001b[39m { isFreeze\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m save\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockResolvedValue(pay)\u001b[33m,\u001b[39m _id\u001b[33m:\u001b[39m \u001b[32m'ID'\u001b[39m }\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 299 |\u001b[39m       \u001b[90m// Перший виклик для getByUser, другий для get всередині refresh\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m       \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mfindOne\u001b[22m\n\u001b[2m     \u001b[90m 301 |\u001b[39m         \u001b[33m.\u001b[39mmockResolvedValueOnce(pay)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:298:71)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Payment.controller","create()"],"duration":4,"failureMessages":[],"fullName":"Payment.controller create() створює запис з правильними лімітами","status":"passed","title":"створює запис з правильними лімітами"},{"ancestorTitles":["Payment.controller","create()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller create() викидає Exception.isExist, якщо refId дублюється","status":"passed","title":"викидає Exception.isExist, якщо refId дублюється"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() ставить ACTIVE, коли нема інвойсів і баланс > 0","status":"passed","title":"ставить ACTIVE, коли нема інвойсів і баланс > 0"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() ставить BLOCKED, коли isFreeze = true","status":"passed","title":"ставить BLOCKED, коли isFreeze = true"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() не викликає NC API для ACTIVE-потоку","status":"passed","title":"не викликає NC API для ACTIVE-потоку"},{"ancestorTitles":["Payment.controller","getMaxAvailable()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller getMaxAvailable() рахує доступний залишок правильно","status":"passed","title":"рахує доступний залишок правильно"},{"ancestorTitles":["Payment.controller","choiceBest()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller choiceBest() повертає null, якщо немає підходящого платежу","status":"passed","title":"повертає null, якщо немає підходящого платежу"},{"ancestorTitles":["Payment.controller","getStatistics()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getStatistics() агрегація для SUCCESS повертає коректні дані","status":"passed","title":"агрегація для SUCCESS повертає коректні дані"},{"ancestorTitles":["Payment.controller","list()"],"duration":3,"failureMessages":[],"fullName":"Payment.controller list() повертає список і count через find().sort().skip().limit() та countDocuments()","status":"passed","title":"повертає список і count через find().sort().skip().limit() та countDocuments()"},{"ancestorTitles":["Payment.controller","pushTail()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller pushTail() throws Exception.cantPushTail if isTail is true","status":"passed","title":"throws Exception.cantPushTail if isTail is true"},{"ancestorTitles":["Payment.controller","pushTail()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller pushTail() throws Exception.cantPushTail if active invoices exist and not all valid","status":"passed","title":"throws Exception.cantPushTail if active invoices exist and not all valid"},{"ancestorTitles":["Payment.controller","pushTail()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller pushTail() calls NC API when valid","status":"passed","title":"calls NC API when valid"},{"ancestorTitles":["Payment.controller","closeTail()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller closeTail() не викликає findOne, якщо status !== \"CONFIRM\"","status":"passed","title":"не викликає findOne, якщо status !== \"CONFIRM\""},{"ancestorTitles":["Payment.controller","closeTail()"],"duration":1,"failureMessages":["ReferenceError: Cannot access 'payment' before initialization\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:222:99)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller closeTail() оновлює і повертає оновлений payment при CONFIRM","status":"failed","title":"оновлює і повертає оновлений payment при CONFIRM"},{"ancestorTitles":["Payment.controller","reject()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller reject() повертає null, якщо статус не ACTIVE","status":"passed","title":"повертає null, якщо статус не ACTIVE"},{"ancestorTitles":["Payment.controller","reject()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller reject() повертає null, якщо currentAmount ≠ initialAmount","status":"passed","title":"повертає null, якщо currentAmount ≠ initialAmount"},{"ancestorTitles":["Payment.controller","reject()"],"duration":0,"failureMessages":["ReferenceError: Cannot access 'pay' before initialization\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:257:43)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller reject() ставить REJECT і повертає оновлений payment, якщо умови дотримано","status":"failed","title":"ставить REJECT і повертає оновлений payment, якщо умови дотримано"},{"ancestorTitles":["Payment.controller","freeze()"],"duration":0,"failureMessages":["ReferenceError: Cannot access 'pay' before initialization\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:275:87)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller freeze() ставить BLOCKED, isFreeze=true і повертає оновлений payment","status":"failed","title":"ставить BLOCKED, isFreeze=true і повертає оновлений payment"},{"ancestorTitles":["Payment.controller","unfreeze()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller unfreeze() повертає null, якщо not frozen","status":"passed","title":"повертає null, якщо not frozen"},{"ancestorTitles":["Payment.controller","unfreeze()"],"duration":0,"failureMessages":["ReferenceError: Cannot access 'pay' before initialization\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:298:71)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller unfreeze() знімає freeze і повертає оновлений payment","status":"failed","title":"знімає freeze і повертає оновлений payment"},{"ancestorTitles":["Payment.controller","togglePriority()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller togglePriority() перемикає priority і зберігає","status":"passed","title":"перемикає priority і зберігає"},{"ancestorTitles":["Payment.controller","sendProofs()"],"duration":2,"failureMessages":[],"fullName":"Payment.controller sendProofs() повертає список підтверджень з правильними link","status":"passed","title":"повертає список підтверджень з правильними link"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js","layers/filters/**/*.js","layers/format/**/*.js","layers/serialize/**/*.js","layers/validate/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Payment.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-24T19-29-58-319Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":49139374,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Payment.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750793399365,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-24T19-29-58-319Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})