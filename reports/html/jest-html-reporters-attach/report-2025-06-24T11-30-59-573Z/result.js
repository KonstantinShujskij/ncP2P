window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":6,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":9,"startTime":1750764660041,"success":false,"testResults":[{"numFailingTests":3,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750764662289,"loadTestEnvironmentEnd":1750764660334,"loadTestEnvironmentStart":1750764660283,"runtime":1954,"setupAfterEnvEnd":1750764660509,"setupAfterEnvStart":1750764660509,"setupFilesEnd":1750764660335,"setupFilesStart":1750764660335,"slow":false,"start":1750764660335},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › create() › створює запис з правильними лімітами\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31m500\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m       expect(arg\u001b[33m.\u001b[39mminLimit)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mminLimit\u001b[33m.\u001b[39m\u001b[36mdefault\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m       \u001b[90m// maxLimit = amount - minNcApiLimit\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m       expect(arg\u001b[33m.\u001b[39mmaxLimit)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m \u001b[33m-\u001b[39m \u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mminNcApiLimit)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       \u001b[36mconst\u001b[39m inst \u001b[33m=\u001b[39m \u001b[33mPaymentModel\u001b[39m\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39minstances[\u001b[35m0\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m       expect(inst\u001b[33m.\u001b[39msave)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:50:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › choiceBest() › повертає null, якщо немає підходящого платежу\u001b[39m\u001b[22m\n\n    Property `getBest` does not exist in the provided object\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 123 |\u001b[39m   describe(\u001b[32m'choiceBest()'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m     it(\u001b[32m'повертає null, якщо немає підходящого платежу'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 125 |\u001b[39m       jest\u001b[33m.\u001b[39mspyOn(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'getBest'\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue(\u001b[36mnull\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m       \u001b[36mconst\u001b[39m out \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mchoiceBest(\u001b[35m123\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 127 |\u001b[39m       expect(out)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ModuleMocker.spyOn (\u001b[22m\u001b[2mnode_modules/jest-mock/build/index.js\u001b[2m:593:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:125:12)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › list() › делегує getList та повертає його результат\u001b[39m\u001b[22m\n\n    Property `getList` does not exist in the provided object\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 151 |\u001b[39m     it(\u001b[32m'делегує getList та повертає його результат'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 152 |\u001b[39m       \u001b[36mconst\u001b[39m mockList \u001b[33m=\u001b[39m { list\u001b[33m:\u001b[39m [{ a\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m }]\u001b[33m,\u001b[39m count\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 153 |\u001b[39m       jest\u001b[33m.\u001b[39mspyOn(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'getList'\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue(mockList)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m       \u001b[36mconst\u001b[39m out \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mlist(\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m         { access\u001b[33m:\u001b[39m \u001b[32m'u'\u001b[39m\u001b[33m,\u001b[39m accessId\u001b[33m:\u001b[39m \u001b[32m'X'\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ModuleMocker.spyOn (\u001b[22m\u001b[2mnode_modules/jest-mock/build/index.js\u001b[2m:593:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:153:12)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Payment.controller","create()"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:50:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller create() створює запис з правильними лімітами","status":"failed","title":"створює запис з правильними лімітами"},{"ancestorTitles":["Payment.controller","create()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller create() викидає Exception.isExist, якщо refId дублюється","status":"passed","title":"викидає Exception.isExist, якщо refId дублюється"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller refresh() ставить ACTIVE, коли нема інвойсів і баланс > 0","status":"passed","title":"ставить ACTIVE, коли нема інвойсів і баланс > 0"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() ставить BLOCKED, коли isFreeze = true","status":"passed","title":"ставить BLOCKED, коли isFreeze = true"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() не викликає NC API для ACTIVE-потоку","status":"passed","title":"не викликає NC API для ACTIVE-потоку"},{"ancestorTitles":["Payment.controller","getMaxAvailable()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getMaxAvailable() рахує доступний залишок правильно","status":"passed","title":"рахує доступний залишок правильно"},{"ancestorTitles":["Payment.controller","choiceBest()"],"duration":1,"failureMessages":["Error: Property `getBest` does not exist in the provided object\n    at ModuleMocker.spyOn (D:\\ncP2P-2\\node_modules\\jest-mock\\build\\index.js:593:13)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:125:12)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller choiceBest() повертає null, якщо немає підходящого платежу","status":"failed","title":"повертає null, якщо немає підходящого платежу"},{"ancestorTitles":["Payment.controller","getStatistics()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getStatistics() агрегація для SUCCESS повертає коректні дані","status":"passed","title":"агрегація для SUCCESS повертає коректні дані"},{"ancestorTitles":["Payment.controller","list()"],"duration":0,"failureMessages":["Error: Property `getList` does not exist in the provided object\n    at ModuleMocker.spyOn (D:\\ncP2P-2\\node_modules\\jest-mock\\build\\index.js:593:13)\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:153:12)\n    at Promise.finally.completed (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1499:10)\n    at _callCircusTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:829:11)\n    at run (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1920:21)\n    at jestAdapter (D:\\ncP2P-2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:272:16)\n    at runTest (D:\\ncP2P-2\\node_modules\\jest-runner\\build\\index.js:340:7)"],"fullName":"Payment.controller list() делегує getList та повертає його результат","status":"failed","title":"делегує getList та повертає його результат"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Payment.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-24T11-30-59-573Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":1980395872,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Payment.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750764662302,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-24T11-30-59-573Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})