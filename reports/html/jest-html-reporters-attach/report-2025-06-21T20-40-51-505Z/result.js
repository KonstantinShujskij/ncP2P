window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":11,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":14,"startTime":1750538451950,"success":false,"testResults":[{"numFailingTests":3,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750538454175,"loadTestEnvironmentEnd":1750538452243,"loadTestEnvironmentStart":1750538452193,"runtime":1930,"setupAfterEnvEnd":1750538452422,"setupAfterEnvStart":1750538452422,"setupFilesEnd":1750538452245,"setupFilesStart":1750538452245,"slow":false,"start":1750538452245},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Invoice.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mInvoice.controller › reject / confirm › reject() викликає callback і refresh\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[32m- Object {\u001b[39m\n    \u001b[32m-   \"_id\": \"I1\",\u001b[39m\n    \u001b[32m-   \"payment\": \"PAY\",\u001b[39m\n    \u001b[32m-   \"save\": [Function mockConstructor],\u001b[39m\n    \u001b[32m-   \"status\": \"REJECT\",\u001b[39m\n    \u001b[32m- }\u001b[39m\n    \u001b[31m+ Object {}\u001b[39m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 111 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 112 |\u001b[39m       expect(inv\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39minvoice\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mREJECT\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 113 |\u001b[39m       expect(\u001b[33mNcPay\u001b[39m\u001b[33m.\u001b[39mcallback)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(inv)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m       expect(\u001b[33mPaymentService\u001b[39m\u001b[33m.\u001b[39mrefresh)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'PAY'\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m       expect(out)\u001b[33m.\u001b[39mtoEqual(inv)\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m     })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Invoice.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:113:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mInvoice.controller › pay() › міняє статус і викликає refresh\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 6\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[32m- Object {\u001b[39m\n    \u001b[32m-   \"_id\": \"I7\",\u001b[39m\n    \u001b[32m-   \"payment\": \"P5\",\u001b[39m\n    \u001b[32m-   \"save\": [Function mockConstructor],\u001b[39m\n    \u001b[32m-   \"status\": \"VALID\",\u001b[39m\n    \u001b[32m- }\u001b[39m\n    \u001b[31m+ Object {}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 185 |\u001b[39m       expect(inv\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39minvoice\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mVALID\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 186 |\u001b[39m       expect(\u001b[33mPaymentService\u001b[39m\u001b[33m.\u001b[39mrefresh)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'P5'\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 187 |\u001b[39m       expect(out)\u001b[33m.\u001b[39mtoEqual(inv)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 188 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 189 |\u001b[39m   })\u001b[22m\n\u001b[2m     \u001b[90m 190 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Invoice.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:187:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mInvoice.controller › toValid / toValidOk › toValidOk міняє validOk і refresh\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 6\u001b[39m\n    \u001b[31m+ Received  + 1\u001b[39m\n\n    \u001b[32m- Object {\u001b[39m\n    \u001b[32m-   \"payment\": \"P9\",\u001b[39m\n    \u001b[32m-   \"save\": [Function mockConstructor],\u001b[39m\n    \u001b[32m-   \"status\": \"VALID\",\u001b[39m\n    \u001b[32m-   \"validOk\": true,\u001b[39m\n    \u001b[32m- }\u001b[39m\n    \u001b[31m+ Object {}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 208 |\u001b[39m       expect(inv\u001b[33m.\u001b[39mvalidOk)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 209 |\u001b[39m       expect(\u001b[33mPaymentService\u001b[39m\u001b[33m.\u001b[39mrefresh)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'P9'\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 210 |\u001b[39m       expect(out)\u001b[33m.\u001b[39mtoEqual(inv)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 211 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 212 |\u001b[39m   })\u001b[22m\n\u001b[2m     \u001b[90m 213 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Invoice.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:210:19)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Invoice.controller","create()"],"duration":2,"failureMessages":[],"fullName":"Invoice.controller create() повертає Exception.isExist, якщо refId вже є","status":"passed","title":"повертає Exception.isExist, якщо refId вже є"},{"ancestorTitles":["Invoice.controller","create()"],"duration":1,"failureMessages":[],"fullName":"Invoice.controller create() повертає Exception.clientHasActive, якщо є активний інвойс","status":"passed","title":"повертає Exception.clientHasActive, якщо є активний інвойс"},{"ancestorTitles":["Invoice.controller","create()"],"duration":8,"failureMessages":[],"fullName":"Invoice.controller create() успішно створює інвойс і повертає його з payLink","status":"passed","title":"успішно створює інвойс і повертає його з payLink"},{"ancestorTitles":["Invoice.controller","reject / confirm"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[32m- Object {\u001b[39m\n\u001b[32m-   \"_id\": \"I1\",\u001b[39m\n\u001b[32m-   \"payment\": \"PAY\",\u001b[39m\n\u001b[32m-   \"save\": [Function mockConstructor],\u001b[39m\n\u001b[32m-   \"status\": \"REJECT\",\u001b[39m\n\u001b[32m- }\u001b[39m\n\u001b[31m+ Object {}\u001b[39m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Invoice.controller.spec.js:113:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Invoice.controller reject / confirm reject() викликає callback і refresh","status":"failed","title":"reject() викликає callback і refresh"},{"ancestorTitles":["Invoice.controller","reject / confirm"],"duration":1,"failureMessages":[],"fullName":"Invoice.controller reject / confirm confirm() без callback, коли stopCallback=true","status":"passed","title":"confirm() без callback, коли stopCallback=true"},{"ancestorTitles":["Invoice.controller","changeAmount()"],"duration":1,"failureMessages":[],"fullName":"Invoice.controller changeAmount() змінює amount і зберігає","status":"passed","title":"змінює amount і зберігає"},{"ancestorTitles":["Invoice.controller","close()"],"duration":2,"failureMessages":[],"fullName":"Invoice.controller close() викидає notFind, якщо CONFIRM","status":"passed","title":"викидає notFind, якщо CONFIRM"},{"ancestorTitles":["Invoice.controller","close()"],"duration":1,"failureMessages":[],"fullName":"Invoice.controller close() повертає confirm, якщо amount===initialAmount","status":"passed","title":"повертає confirm, якщо amount===initialAmount"},{"ancestorTitles":["Invoice.controller","close()"],"duration":3,"failureMessages":[],"fullName":"Invoice.controller close() викликає moreAmount і callback при delta>available","status":"passed","title":"викликає moreAmount і callback при delta>available"},{"ancestorTitles":["Invoice.controller","pay()"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[32m- Object {\u001b[39m\n\u001b[32m-   \"_id\": \"I7\",\u001b[39m\n\u001b[32m-   \"payment\": \"P5\",\u001b[39m\n\u001b[32m-   \"save\": [Function mockConstructor],\u001b[39m\n\u001b[32m-   \"status\": \"VALID\",\u001b[39m\n\u001b[32m- }\u001b[39m\n\u001b[31m+ Object {}\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Invoice.controller.spec.js:187:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Invoice.controller pay() міняє статус і викликає refresh","status":"failed","title":"міняє статус і викликає refresh"},{"ancestorTitles":["Invoice.controller","toValid / toValidOk"],"duration":1,"failureMessages":[],"fullName":"Invoice.controller toValid / toValidOk toValid кидає, якщо status!==REJECT","status":"passed","title":"toValid кидає, якщо status!==REJECT"},{"ancestorTitles":["Invoice.controller","toValid / toValidOk"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[32m- Object {\u001b[39m\n\u001b[32m-   \"payment\": \"P9\",\u001b[39m\n\u001b[32m-   \"save\": [Function mockConstructor],\u001b[39m\n\u001b[32m-   \"status\": \"VALID\",\u001b[39m\n\u001b[32m-   \"validOk\": true,\u001b[39m\n\u001b[32m- }\u001b[39m\n\u001b[31m+ Object {}\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Invoice.controller.spec.js:210:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Invoice.controller toValid / toValidOk toValidOk міняє validOk і refresh","status":"failed","title":"toValidOk міняє validOk і refresh"},{"ancestorTitles":["Invoice.controller","getStatistics()"],"duration":1,"failureMessages":[],"fullName":"Invoice.controller getStatistics() повертає нулі, якщо нема записів","status":"passed","title":"повертає нулі, якщо нема записів"},{"ancestorTitles":["Invoice.controller","list()"],"duration":4,"failureMessages":[],"fullName":"Invoice.controller list() повертає дані з Invoice.find і countDocuments","status":"passed","title":"повертає дані з Invoice.find і countDocuments"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Invoice.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-21T20-40-51-505Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":-1496427506,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Invoice.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750538454281,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-21T20-40-51-505Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})