window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":18,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":22,"startTime":1750793774008,"success":false,"testResults":[{"numFailingTests":4,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1750793774566,"loadTestEnvironmentEnd":1750793774304,"loadTestEnvironmentStart":1750793774253,"runtime":261,"setupAfterEnvEnd":1750793774472,"setupAfterEnvStart":1750793774472,"setupFilesEnd":1750793774305,"setupFilesStart":1750793774305,"slow":false,"start":1750793774305},"testFilePath":"D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › closeTail() › оновлює і повертає оновлений payment при CONFIRM\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"SUCCESS\"\u001b[39m\n    Received: \u001b[31m\"BLOCKED\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 194 |\u001b[39m       \u001b[36mconst\u001b[39m refreshSpy \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mspyOn(\u001b[33mPaymentCtrl\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'refresh'\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue(pay)\u001b[22m\n\u001b[2m     \u001b[90m 195 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPaymentCtrl\u001b[39m\u001b[33m.\u001b[39mcloseTail(\u001b[32m'TAIL123'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'CONFIRM'\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 196 |\u001b[39m       expect(pay\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mSUCCESS\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 197 |\u001b[39m       expect(pay\u001b[33m.\u001b[39misTail)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 198 |\u001b[39m       expect(pay\u001b[33m.\u001b[39msave)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[22m\n\u001b[2m     \u001b[90m 199 |\u001b[39m       expect(refreshSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(pay\u001b[33m.\u001b[39m_id)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:196:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › reject() › ставить REJECT і повертає оновлений payment, якщо умови дотримано\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"ID\"\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 227 |\u001b[39m       expect(pay\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[33mConst\u001b[39m\u001b[33m.\u001b[39mpayment\u001b[33m.\u001b[39mstatusList\u001b[33m.\u001b[39m\u001b[33mREJECT\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m       expect(pay\u001b[33m.\u001b[39msave)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 229 |\u001b[39m       expect(refreshSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(pay\u001b[33m.\u001b[39m_id)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m       expect(res)\u001b[33m.\u001b[39mtoBe(pay)\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m       refreshSpy\u001b[33m.\u001b[39mmockRestore()\u001b[22m\n\u001b[2m     \u001b[90m 232 |\u001b[39m     })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:229:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › freeze() › ставить BLOCKED, isFreeze=true і викликає refresh\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"ID\"\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 244 |\u001b[39m       expect(pay\u001b[33m.\u001b[39misFreeze)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 245 |\u001b[39m       expect(pay\u001b[33m.\u001b[39msave)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 246 |\u001b[39m       expect(refreshSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(pay\u001b[33m.\u001b[39m_id)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 247 |\u001b[39m       expect(res)\u001b[33m.\u001b[39mtoBe(pay)\u001b[22m\n\u001b[2m     \u001b[90m 248 |\u001b[39m       refreshSpy\u001b[33m.\u001b[39mmockRestore()\u001b[22m\n\u001b[2m     \u001b[90m 249 |\u001b[39m     })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:246:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPayment.controller › unfreeze() › знімає freeze і викликає refresh\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"ID\"\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 267 |\u001b[39m       expect(pay\u001b[33m.\u001b[39misFreeze)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 268 |\u001b[39m       expect(pay\u001b[33m.\u001b[39msave)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 269 |\u001b[39m       expect(refreshSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(pay\u001b[33m.\u001b[39m_id)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 270 |\u001b[39m       expect(res)\u001b[33m.\u001b[39mtoBe(pay)\u001b[22m\n\u001b[2m     \u001b[90m 271 |\u001b[39m       refreshSpy\u001b[33m.\u001b[39mmockRestore()\u001b[22m\n\u001b[2m     \u001b[90m 272 |\u001b[39m     })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlayers/controllers/__tests__/Payment.controller.spec.js\u001b[39m\u001b[0m\u001b[2m:269:26)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Payment.controller","create()"],"duration":4,"failureMessages":[],"fullName":"Payment.controller create() створює запис з правильними лімітами","status":"passed","title":"створює запис з правильними лімітами"},{"ancestorTitles":["Payment.controller","create()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller create() викидає Exception.isExist, якщо refId дублюється","status":"passed","title":"викидає Exception.isExist, якщо refId дублюється"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":2,"failureMessages":[],"fullName":"Payment.controller refresh() ставить ACTIVE, коли нема інвойсів і баланс > 0","status":"passed","title":"ставить ACTIVE, коли нема інвойсів і баланс > 0"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() ставить BLOCKED, коли isFreeze = true","status":"passed","title":"ставить BLOCKED, коли isFreeze = true"},{"ancestorTitles":["Payment.controller","refresh()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller refresh() не викликає NC API для ACTIVE-потоку","status":"passed","title":"не викликає NC API для ACTIVE-потоку"},{"ancestorTitles":["Payment.controller","getMaxAvailable()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getMaxAvailable() рахує доступний залишок правильно","status":"passed","title":"рахує доступний залишок правильно"},{"ancestorTitles":["Payment.controller","choiceBest()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller choiceBest() повертає null, якщо немає підходящого платежу","status":"passed","title":"повертає null, якщо немає підходящого платежу"},{"ancestorTitles":["Payment.controller","getStatistics()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller getStatistics() агрегація для SUCCESS повертає коректні дані","status":"passed","title":"агрегація для SUCCESS повертає коректні дані"},{"ancestorTitles":["Payment.controller","list()"],"duration":2,"failureMessages":[],"fullName":"Payment.controller list() повертає список і count через find().sort().skip().limit() та countDocuments()","status":"passed","title":"повертає список і count через find().sort().skip().limit() та countDocuments()"},{"ancestorTitles":["Payment.controller","pushTail()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller pushTail() throws Exception.cantPushTail if isTail is true","status":"passed","title":"throws Exception.cantPushTail if isTail is true"},{"ancestorTitles":["Payment.controller","pushTail()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller pushTail() throws Exception.cantPushTail if active invoices exist and not all valid","status":"passed","title":"throws Exception.cantPushTail if active invoices exist and not all valid"},{"ancestorTitles":["Payment.controller","pushTail()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller pushTail() calls NC API when valid","status":"passed","title":"calls NC API when valid"},{"ancestorTitles":["Payment.controller","closeTail()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller closeTail() не викликає findOne, якщо status !== \"CONFIRM\"","status":"passed","title":"не викликає findOne, якщо status !== \"CONFIRM\""},{"ancestorTitles":["Payment.controller","closeTail()"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"SUCCESS\"\u001b[39m\nReceived: \u001b[31m\"BLOCKED\"\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:196:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller closeTail() оновлює і повертає оновлений payment при CONFIRM","status":"failed","title":"оновлює і повертає оновлений payment при CONFIRM"},{"ancestorTitles":["Payment.controller","reject()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller reject() повертає null, якщо статус не ACTIVE","status":"passed","title":"повертає null, якщо статус не ACTIVE"},{"ancestorTitles":["Payment.controller","reject()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller reject() повертає null, якщо currentAmount ≠ initialAmount","status":"passed","title":"повертає null, якщо currentAmount ≠ initialAmount"},{"ancestorTitles":["Payment.controller","reject()"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"ID\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:229:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller reject() ставить REJECT і повертає оновлений payment, якщо умови дотримано","status":"failed","title":"ставить REJECT і повертає оновлений payment, якщо умови дотримано"},{"ancestorTitles":["Payment.controller","freeze()"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"ID\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:246:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller freeze() ставить BLOCKED, isFreeze=true і викликає refresh","status":"failed","title":"ставить BLOCKED, isFreeze=true і викликає refresh"},{"ancestorTitles":["Payment.controller","unfreeze()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller unfreeze() повертає null, якщо not frozen","status":"passed","title":"повертає null, якщо not frozen"},{"ancestorTitles":["Payment.controller","unfreeze()"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"ID\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (D:\\ncP2P-2\\layers\\controllers\\__tests__\\Payment.controller.spec.js:269:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Payment.controller unfreeze() знімає freeze і викликає refresh","status":"failed","title":"знімає freeze і викликає refresh"},{"ancestorTitles":["Payment.controller","togglePriority()"],"duration":0,"failureMessages":[],"fullName":"Payment.controller togglePriority() перемикає priority і зберігає","status":"passed","title":"перемикає priority і зберігає"},{"ancestorTitles":["Payment.controller","sendProofs()"],"duration":1,"failureMessages":[],"fullName":"Payment.controller sendProofs() повертає список підтверджень з правильними link","status":"passed","title":"повертає список підтверджень з правильними link"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["utils/**/*.js","core/**/*.js","middleware/**/*.js","routes/**/*.js","layers/controllers/**/*.js","layers/models/**/*.js","layers/filters/**/*.js","layers/format/**/*.js","layers/serialize/**/*.js","layers/validate/**/*.js"],"coverageDirectory":"D:\\ncP2P-2\\coverage","coverageProvider":"babel","coverageReporters":["html","text","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["layers/controllers/__tests__/Payment.controller.spec.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\ncP2P-2\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/html","filename":"report-2025-06-24T19-36-13-559Z.html","expand":true}]],"rootDir":"D:\\ncP2P-2","runInBand":false,"runTestsByPath":false,"seed":2122390403,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["layers/controllers/__tests__/Payment.controller.spec.js"],"type":"TestPathPatterns"},"testSequencer":"D:\\ncP2P-2\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1750793774581,"_reporterOptions":{"publicPath":"reports/html","filename":"report-2025-06-24T19-36-13-559Z.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})